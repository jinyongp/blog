<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>book on dev.jinyongp</title><link>https://jinyongp.dev/tags/book/</link><description>Recent content in book on dev.jinyongp</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 23 Apr 2022 07:59:51 +0000</lastBuildDate><atom:link href="https://jinyongp.dev/tags/book/index.xml" rel="self" type="application/rss+xml"/><item><title>Clean Code : 1장 깨끗한 코드</title><link>https://jinyongp.dev/blog/clean-code-1%EC%9E%A5-%EA%B9%A8%EB%81%97%ED%95%9C-%EC%BD%94%EB%93%9C/</link><pubDate>Sat, 23 Apr 2022 07:59:51 +0000</pubDate><guid>https://jinyongp.dev/blog/clean-code-1%EC%9E%A5-%EA%B9%A8%EB%81%97%ED%95%9C-%EC%BD%94%EB%93%9C/</guid><description>Today I Read 클린코드 챌린지 2일차입니다! (1일차는 구매 인증)
저자의 소개 그리고 목차부터 1장 깨끗한 코드까지 읽었습니다. 공감가는 부분이 많았고 평소 궁금했던 부분에 대해서도 언급해주어 많은 도움이 될 것 같습니다.
기억하고 싶은 내용 사소한 곳에서 발휘하는 정직은 사소하지 않다. - xxii 깨끗한 코드를 작성하는 프로그래머는 빈 캔퍼스를 우아한 작품으로 바꿔가는 화가와 같다. - p.8 중복을 피하라. 한 기능만 수행하라. 제대로 표현해라. 작게 추상화하라. - p.14 떠오른 생각 누구나 방을 청소하는 것처럼 깨끗한 코드를 작성하기 위해 고민하고 노력해본 경험이 있을겁니다.</description></item><item><title>Reading Clean Code</title><link>https://jinyongp.dev/projects/reading-clean-code/</link><pubDate>Sat, 23 Apr 2022 07:29:30 +0000</pubDate><guid>https://jinyongp.dev/projects/reading-clean-code/</guid><description>노마드코더에서 북클럽으로 Clean Code Challenge를 시작했습니다. 3주간 클린 코드를 읽고 매일 TIL을 작성하려고 합니다.
Series Clean Code : 1장 깨끗한 코드</description></item></channel></rss>